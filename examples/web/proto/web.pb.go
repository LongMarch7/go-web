// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/github.com/LongMarch7/go-web/examples/web/proto/web.proto

package proto

import (
	context "context"
	fmt "fmt"
	grpc_transport "github.com/go-kit/kit/transport/grpc"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Message struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_51a088755b3c555f, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "proto.Message")
}

func init() {
	proto.RegisterFile("src/github.com/LongMarch7/go-web/examples/web/proto/web.proto", fileDescriptor_51a088755b3c555f)
}

var fileDescriptor_51a088755b3c555f = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x2d, 0x2e, 0x4a, 0xd6,
	0x4f, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xf7, 0xc9, 0xcf, 0x4b, 0xf7,
	0x4d, 0x2c, 0x4a, 0xce, 0x30, 0xd7, 0x4f, 0xcf, 0xd7, 0x2d, 0x4f, 0x4d, 0xd2, 0x4f, 0xad, 0x48,
	0xcc, 0x2d, 0xc8, 0x49, 0x2d, 0xd6, 0x07, 0x71, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x41, 0x2c, 0x3d,
	0x30, 0x4b, 0x88, 0x15, 0x4c, 0x29, 0xc9, 0x72, 0xb1, 0xfb, 0xa6, 0x16, 0x17, 0x27, 0xa6, 0xa7,
	0x0a, 0x09, 0x71, 0xb1, 0x94, 0xa4, 0x56, 0x94, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81,
	0xd9, 0x46, 0x76, 0x5c, 0xdc, 0x4e, 0xf9, 0xf9, 0xd9, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0xfa, 0x5c, 0xdc, 0xee, 0xa9, 0x25, 0x20, 0x11, 0xcf, 0xbc, 0xb4, 0x7c, 0x21, 0x3e, 0x88,
	0x59, 0x7a, 0x50, 0x13, 0xa4, 0xd0, 0xf8, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x01, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x9a, 0x5b, 0x0c, 0x49, 0xad, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookServiceClient is the client API for BookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookServiceClient interface {
	GetBookInfo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
}

type bookServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookServiceClient(cc *grpc.ClientConn) BookServiceClient {
	return &bookServiceClient{cc}
}

func (c *bookServiceClient) GetBookInfo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/proto.BookService/GetBookInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookServiceServer is the server API for BookService service.
type BookServiceServer interface {
	GetBookInfo(context.Context, *Message) (*Message, error)
}

// UnimplementedBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookServiceServer struct {
}

func (*UnimplementedBookServiceServer) GetBookInfo(ctx context.Context, req *Message) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookInfo not implemented")
}

// generateDefaultServerBookServiceServer can be create defaut server.
type DefaultBookServiceServer struct {
	GetBookInfoHandler grpc_transport.Handler
}

func (d *DefaultBookServiceServer) GetBookInfo(ctx context.Context, req *Message) (*Message, error) {
	_, rsp, err := d.GetBookInfoHandler.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return rsp.(*Message), err
}

func RegisterBookServiceServer(s *grpc.Server, srv interface{}) {
	s.RegisterService(&_BookService_serviceDesc, srv.(BookServiceServer))
}

func _BookService_GetBookInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).GetBookInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookService/GetBookInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).GetBookInfo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BookService",
	HandlerType: (*BookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookInfo",
			Handler:    _BookService_GetBookInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "src/github.com/LongMarch7/go-web/examples/web/proto/web.proto",
}
